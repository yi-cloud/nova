- hosts: primary
  name: nova-grenade-live-migration
  tasks:

    - name: Ensure legacy workspace directory
      file:
        path: '{{ ansible_user_dir }}/workspace'
        state: directory

    - shell:
        cmd: |
          set -e
          set -x
          cat > clonemap.yaml << EOF
          clonemap:
            - name: openstack/devstack-gate
              dest: devstack-gate
          EOF
          /usr/zuul-env/bin/zuul-cloner -m clonemap.yaml --cache-dir /opt/git \
              https://opendev.org \
              openstack/devstack-gate
        executable: /bin/bash
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'

    - shell:
        cmd: |
          set -e
          set -x
          export PROJECTS="openstack/grenade $PROJECTS"
          export PYTHONUNBUFFERED=true
          export DEVSTACK_GATE_CONFIGDRIVE=0
          export DEVSTACK_GATE_NEUTRON=1
          export DEVSTACK_GATE_TEMPEST_NOTESTS=1
          export DEVSTACK_GATE_GRENADE=pullup
          # By default grenade runs only smoke tests so we need to set
          # RUN_SMOKE to False in order to run live migration tests using
          # grenade
          export DEVSTACK_LOCAL_CONFIG="RUN_SMOKE=False"
          # LIVE_MIGRATE_BACK_AND_FORTH will tell Tempest to run a live
          # migration of the same instance to one compute node and then back
          # to the other, which is mostly only interesting for grenade since
          # we have mixed level computes.
          export DEVSTACK_LOCAL_CONFIG+=$'\n'"LIVE_MIGRATE_BACK_AND_FORTH=True"
          export BRANCH_OVERRIDE=default
          export DEVSTACK_GATE_TOPOLOGY="multinode"
          if [ "$BRANCH_OVERRIDE" != "default" ] ; then
              export OVERRIDE_ZUUL_BRANCH=$BRANCH_OVERRIDE
          fi
          function post_test_hook {
              /opt/stack/new/nova/nova/tests/live_migration/hooks/run_tests.sh
          }
          export -f post_test_hook
          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh
        executable: /bin/bash
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'
